# vim:ft=i3config

# rofi
bindsym $mod+d exec "rofi -show drun -font 'UbuntuMono Nerd Font 32' -show-icons -icon-theme 'Papirus'"
# bindsym $mod+Shift+d exec "rofi -modi 'emoji:rofimoji -a type' -show emoji"
bindsym $mod+Shift+d exec "rofi -show run -font 'UbuntuMono Nerd Font 32'"

# Volume & Media Button Settings
set $get_volume exec $HOME/.config/i3/volume/get_volume.sh
set $get_mute_status exec $HOME/.config/i3/volume/get_mute_status.sh

# Use pactl to adjust volume in PulseAudio.
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +5% && volnoti-show $(eval $get_volume) 
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -5% && volnoti-show $(eval $get_volume) 
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && volnoti-show $(eval $get_mute_status)
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && notify-send "Mic muted"

# Media keys
bindsym XF86AudioPlay exec playerctl play-pause && notify-send "Play/Pause"
bindsym XF86AudioNext exec playerctl next && notify-send "Next"
bindsym XF86AudioPrev exec playerctl prev && notify-send "Previous"

# start a terminal
bindsym $mod+Return exec kitty 

# kill focused window
bindsym $mod+Shift+q kill

# center current window (moving to floating first)
bindsym $mod+Shift+c floating enable, resize set 2400 px 1800 px, move position center

# lock with i3lock
bindsym $mod+x exec i3lock --tiling --image ~/Pictures/Wallpapers/neon/night_city_street_umbrella_121639_1920x1080.png

# Change focus with arrow keys
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# Move windows with arrow keys
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

bindsym $mod+r mode "resize"

# resize window (you can also use the mouse for that)
mode "resize" {
    bindsym h resize shrink width 1 px or 1 ppt
    bindsym k resize grow height 1 px or 1 ppt
    bindsym j resize shrink height 1 px or 1 ppt
    bindsym l resize grow width 1 px or 1 ppt
    
    # same bindings, but for the arrow keys
    bindsym Left resize shrink width 1 px or 1 ppt
    bindsym Down resize grow height 1 px or 1 ppt
    bindsym Up resize shrink height 1 px or 1 ppt
    bindsym Right resize grow width 1 px or 1 ppt
    
    # back to normal: Enter or Escape or $mod+r
    bindsym Return mode "default"
    bindsym Escape mode "default"
    bindsym $mod+r mode "default"
}

# pulseaudio-control next node shortcut (ctrl alt s)
bindsym Mod1+Control+s exec --no-startup-id "pulseaudio-control --node-blacklist alsa_output.usb-Generic_USB_Audio-00.HiFi__SPDIF__sink,alsa_output.usb-Generic_USB_Audio-00.HiFi__Headphones__sink next-node"

# Make the currently focused window a scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the first scratchpad window
bindsym $mod+minus scratchpad show

# move focused workspace between monitors
bindsym $mod+Ctrl+greater move workspace to output right
bindsym $mod+Ctrl+less move workspace to output left

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9 ÔÄÅ "
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# copyq
bindsym $mod+Shift+v exec copyq toggle

# screenshot with spectacle 
# bindsym $mod+Shift+s exec spectacle -bcr

# screenshot with flameshot
bindsym $mod+Shift+s exec flameshot gui

# toggle notifications with ctrl+meta+alt+d
bindsym Control+Mod1+Mod4+d exec dunstctl set-paused toggle

# Bind capslock to Shift+Control+Alt+Mod4
# exec_always xmodmap ~/.Xmodmap
# exec_always --no-startup-id xcape -e 'F13=Control_L|Super_L|Alt_L'

### Home assistant webhook toggles ###
# Toggle bedroom lights
bindsym Control+Mod1+grave exec curl -X POST -H "Content-Type: application/json" -d '{ "action": "toggle" }' http://192.168.1.118:8123/api/webhook/room_lights
bindsym Control+Mod1+0 exec curl -X POST -H "Content-Type: application/json" -d '{ "brightness": 100 }' http://192.168.1.118:8123/api/webhook/room_lights
bindsym Control+Mod1+9 exec curl -X POST -H "Content-Type: application/json" -d '{ "brightness": 1 }' http://192.168.1.118:8123/api/webhook/room_lights
bindsym Control+Mod1+8 exec curl -X POST -H "Content-Type: application/json" -d '{ "brightness": 50 }' http://192.168.1.118:8123/api/webhook/room_lights

bindsym Control+Mod1+1 exec curl -X POST -H "Content-Type: application/json" -d '{ "color": "white" }' http://192.168.1.118:8123/api/webhook/room_lights
bindsym Control+Mod1+2 exec curl -X POST -H "Content-Type: application/json" -d '{ "color": "daylight" }' http://192.168.1.118:8123/api/webhook/room_lights
bindsym Control+Mod1+3 exec curl -X POST -H "Content-Type: application/json" -d '{ "color": "blue" }' http://192.168.1.118:8123/api/webhook/room_lights
bindsym Control+Mod1+4 exec curl -X POST -H "Content-Type: application/json" -d '{ "color": "red" }' http://192.168.1.118:8123/api/webhook/room_lights
bindsym Control+Mod1+5 exec curl -X POST -H "Content-Type: application/json" -d '{ "color": "magenta" }' http://192.168.1.118:8123/api/webhook/room_lights
bindsym Control+Mod1+6 exec curl -X POST -H "Content-Type: application/json" -d '{ "color": "cyan" }' http://192.168.1.118:8123/api/webhook/room_lights

# Run colorpicker
bindsym Control+Shift+c exec gpick

# Run x11-emoji-picker 
bindsym Control+period exec emoji-picker 

# Run hints on Alt+; (from https://github.com/AlfredoSequeida/hints)
bindsym Mod1+semicolon exec /home/aziznal/.local/bin/hints

